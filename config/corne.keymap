/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        mouse_layer {
            bindings = <&tog 4>;
            key-positions = <11 35>;
        };
    };

    macros {
        penis: penis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL>;
            label = "PENIS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q    &kp W  &kp E               &kp R         &kp T        &kp Y    &kp U        &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A    &kp S  &kp D               &lt 3 F       &kp G        &kp H    &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &lt 5 Z  &kp X  &kp C               &kp V         &kp B        &lt 3 N  &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                           &mt LEFT_ALT EQUAL  &lt 1 ESCAPE  &kp SPACE    &kp RET  &lt 2 GRAVE  &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4         &kp N5          &kp NUMBER_6    &kp N7           &kp N8                &kp N9                 &kp N0     &kp BSPC
&trans  &trans  &trans  &trans  &kp AMPS       &kp ASTERISK    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE   &kp BACKSLASH
&trans  &trans  &trans  &trans  &kp AMPERSAND  &penis          &kp LBKT        &kp RBKT         &kp LESS_THAN         &kp GREATER_THAN       &kp EQUAL  &kp PLUS
                        &trans  &trans         &kp SPACE       &kp RET         &trans           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1           &kp F2  &kp F3    &kp F4          &kp F5     &kp F6       &kp F7             &kp F8          &kp F9           &kp F10     &kp F11               &kp F12
&trans           &trans  &kp HOME  &kp PG_DN       &kp PG_UP  &kp END      &kp LEFT_ARROW     &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
&kp PRINTSCREEN  &tog 4  &trans    &kp LEFT_SHIFT  &kp LC(C)  &kp LC(V)    &kp C_VOLUME_DOWN  &kp C_MUTE      &kp C_VOLUME_UP  &kp C_NEXT  &kp C_PREV            &kp C_PLAY_PAUSE
                                   &trans          &trans     &kp SPACE    &kp RET            &trans          &trans
            >;
        };

        nav_layer {
            bindings = <
&kp LA(GRAVE)   &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LA(N4)  &kp LA(N5)    &kp LA(N6)        &kp LA(N7)        &kp LA(N8)       &kp LA(N9)     &kp LA(N0)  &none
&kp LSHFT       &none       &none       &none       &none       &none         &kp LS(RC(H))     &kp LS(LC(J))     &kp LS(LC(K))    &kp LS(LC(L))  &none       &none
&kp LEFT_SHIFT  &trans      &none       &none       &none       &none         &kp LS(LC(LBKT))  &kp LS(LC(RBKT))  &kp LC(LS(TAB))  &kp LC(TAB)    &none       &none
                                        &none       &trans      &none         &none             &trans            &none
            >;
        };

        mouse {
            bindings = <
&none  &none   &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT    &none           &none           &none         &none            &none  &none
&none  &none   &none           &mkp LCLK       &mkp MCLK     &mkp RCLK          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
&none  &trans  &none           &none           &none         &none              &none           &none           &none         &none            &none  &none
                               &none           &trans        &none              &none           &trans          &none
            >;
        };

        copy-paste {
            bindings = <
&trans  &trans  &trans     &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LG(C)  &kp LG(V)  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LC(C)  &kp LC(V)  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
